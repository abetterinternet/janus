name: publish-sql-schema

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      force:
        description: force overwrite of migrations
        default: false
        required: false
        type: boolean

jobs:
  push-schema:
    permissions:
      id-token: "write"
      contents: "read"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: "gcp-auth"
      name: "Authenticate to GCP"
      uses: "google-github-actions/auth@v1"
      with:
        workload_identity_provider: ${{ vars.GCP_ARTIFACT_PUBLISHER_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ vars.GCP_ARTIFACT_PUBLISHER_DEPLOY_SERVICE_ACCOUNT }}
    - name: Get the version
      id: get_version
      run: |
        VERSION=${GITHUB_REF/refs\/tags\//}
        echo "MINOR_VERSION=$(echo ${VERSION} | awk -F'.' '{if (NF != 3) {exit 1}; printf "%s.%s", $1, $2}')" >> $GITHUB_OUTPUT
    - name: Check validity of migrations
      uses: "./.github/actions/validate-migrations"
    - name: Check that existing migrations have not changed
      if: '!inputs.force'
      run: |
        # Overwite the migrations on the local ref so that we can use `git diff` to compare.
        rm -f db/*.sql
        trap "git reset --hard" EXIT
        gcloud alpha storage cp --recursive "gs://janus-artifacts-sql-schemas/$MINOR_VERSION/db/*.sql" db/

        git add db/*.sql
        DIFF=$(git diff --name-status HEAD db/)
        printf "%s\n" "$DIFF"

        # The meaning of added and removed files are reversed when comparing this
        # way. If a file comes up deleted, that means that the local git ref has
        # introduced a new file that is not present in the remote. This is permissible.
        # If a file comes up added, that means that the local ref has removed an
        # existing migration which was readded by the overwrite step. This is not
        # permitted.
        if [ -n "$DIFF" ] && grep -qPv '^D\b' <<<"$DIFF"; then
          echo "fatal: migrations cannot be modified or removed, only added."
          exit 1
        fi
    - name: "Upload schema file(s)"
      if: '!inputs.force'
      run: |-
        gcloud alpha storage cp --recursive --no-clobber \
          db \
          gs://janus-artifacts-sql-schemas/${{ steps.get_version.outputs.minor_version }}/
    - name: "Overwrite schema file(s)"
      if: inputs.force
      run: |-
        gcloud alpha storage rm --recursive gs://janus-artifacts-sql-schemas/${{ steps.get_version.outputs.minor_version }}/
        gcloud alpha storage cp --recursive \
          db \
          gs://janus-artifacts-sql-schemas/${{ steps.get_version.outputs.minor_version }}/
